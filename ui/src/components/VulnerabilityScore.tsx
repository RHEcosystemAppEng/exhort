import React from 'react';
import {
  Progress,
  ProgressMeasureLocation,
  ProgressSize,
  ProgressVariant,
  Split,
  SplitItem,
} from '@patternfly/react-core';
import { Vulnerability } from '../api/report';

interface VulnerabilityScoreProps {
  vunerability: Vulnerability;
}

export const VulnerabilityScore: React.FC<VulnerabilityScoreProps> = ({ vunerability }) => {
  const severity = vunerability.severity;
  let progressBarVariant: ProgressVariant;
  switch (severity) {
    case 'CRITICAL':
    case 'HIGH':
      progressBarVariant = ProgressVariant.danger;
      break;
    default:
      progressBarVariant = ProgressVariant.warning;
      break;
  }
  return (
    <>
      <Split hasGutter>
        <SplitItem>{`${vunerability.cvssScore}/10`}</SplitItem>
        <SplitItem isFilled>
          <Progress
            aria-label="cvss-score"
            value={vunerability.cvssScore}
            min={0}
            max={10}
            size={ProgressSize.sm}
            variant={progressBarVariant}
            measureLocation={ProgressMeasureLocation.none}
          />
        </SplitItem>
      </Split>
    </>
  );
};
