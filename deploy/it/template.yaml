kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: exhort
labels:
  template: exhort
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: '${REDIS_SERVICE_NAME}'
      labels:
        app-name: '${REDIS_APP_NAME}'
    spec:
      ports:
        - name: redis
          protocol: TCP
          port: '${{REDIS_SERVICE_PORT}}'
          targetPort: redis
      selector:
        app: '${REDIS_APP_NAME}'
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: '${REDIS_APP_NAME}'
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: '${REDIS_APP_NAME}'
      template:
        metadata:
          labels:
            app: '${REDIS_APP_NAME}'
        spec:
          containers:
            - name: redis
              image: '${REDIS_IMAGE}'
              ports:
                - name: redis
                  containerPort: '${{REDIS_SERVICE_PORT}}'
                  protocol: TCP
              volumeMounts:
                - name: logs
                  mountPath: /redisinsight/logs
                - name: data
                  mountPath: /data
          volumes:
            - name: logs
              emptyDir: {}
            - name: data
              emptyDir: {}
  - kind: Service
    apiVersion: v1
    metadata:
      name: '${SERVICE_NAME}'
      labels:
        app-name: '${APP_NAME}'
    spec:
      ports:
        - name: http
          protocol: TCP
          appProtocol: http
          port: '${{SERVICE_PORT}}'
          targetPort: http
        - name: management
          protocol: TCP
          appProtocol: http
          port: '${{MANAGEMENT_PORT}}'
          targetPort: management
      selector:
        app: '${APP_NAME}'
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: '${APP_NAME}'
    spec:
      replicas: '${{REPLICAS}}'
      selector:
        matchLabels:
          app: '${APP_NAME}'
      template:
        metadata:
          labels:
            app: '${APP_NAME}'
        spec:
          containers:
            - name: app
              image: '${IMAGE}'
              livenessProbe:
                httpGet:
                  path: /q/health/live
                  port: '${{MANAGEMENT_PORT}}'
                initialDelaySeconds: 15
                periodSeconds: 20
              readinessProbe:
                httpGet:
                  path: /q/health/ready
                  port: '${{MANAGEMENT_PORT}}'
                initialDelaySeconds: 5
                periodSeconds: 10
              ports:
                - name: http
                  containerPort: '${{SERVICE_PORT}}'
                  protocol: TCP
                - name: management
                  containerPort: '${{MANAGEMENT_PORT}}'
                  protocol: TCP
              env:
                - name: DB_REDIS_HOST
                  value: '${REDIS_SERVICE_NAME}'
                - name: DB_REDIS_PORT
                  value: '${REDIS_SERVICE_PORT}'
                - name: QUARKUS_HTTP_PORT
                  value: '8080'
                - name: QUARKUS_MANAGEMENT_PORT
                  value: '9000'
              securityContext:
                runAsNonRoot: true
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              imagePullPolicy: Always
          restartPolicy: Always
parameters:
  - name: APP_NAME
    displayName: Application name
    description: Application name
    value: exhort
    required: true
  - name: REDIS_APP_NAME
    displayName: Redis Application name
    description: Redis Application name
    value: redis
    required: true
  - name: REPLICAS
    displayName: Replicas
    description: Number of desired pods
    value: '1'
    required: true
  - name: IMAGE
    displayName: Container image
    description: Container image
    value: quay.io/ecosystem-appeng/exhort:latest
    required: true
  - name: REDIS_IMAGE
    displayName: Redis Container image
    description: Redis Container image
    value: docker.io/redis/redis-stack:latest
  - name: SERVICE_NAME
    displayName: Service name
    description: Service name
    value: exhort
    required: true
  - name: SERVICE_PORT
    displayName: Service port
    description: Service port
    value: '8080'
    required: true
  - name: REDIS_SERVICE_NAME
    displayName: Redis Service Name
    description: Redis Service Name
    value: redis
    required: true
  - name: REDIS_SERVICE_PORT
    displayName: Redis Service port
    description: Redis Service port
    value: '6379'
    required: true
  - name: MANAGEMENT_PORT
    displayName: Management port
    description: Management port for exposing health and metrics
    value: '9000'
    required: true
  - name: CPU_REQUEST
    description: The minimum amount of CPU required by a container
    displayName: Memory Limit
    required: true
    value: 100m
  - name: CPU_LIMIT
    description: The maximum amount of CPU the container can use.
    displayName: Memory Limit
    required: true
    value: 500m
  - name: MEMORY_REQUEST
    description: The minimum amount of memory required by a container
    displayName: Memory Limit
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    description: The maximum amount of memory the container can use.
    displayName: Memory Limit
    required: true
    value: 1024Mi
  - name: ENV_NAME
    value: integration-tests
    displayName: Environment (default -- stage)
    description: 'Application environment'
  - name: PROJECT_NAME
    value: trusted-content-exhort-stage
    displayName: Project name (default -- trusted-content-exhort-stage)
    description: 'Project name'
